import matplotlib.pyplot as plt
import pylab
from mpl_toolkits import mplot3d
import numpy as np

# Naive recursive version:

arr_fib = [1.5735626220703125e-05, 5.245208740234375e-06, 3.337860107421875e-06, 3.337860107421875e-06,
           3.814697265625e-06, 5.245208740234375e-06, 7.152557373046875e-06, 9.775161743164062e-06,
           1.4066696166992188e-05, 2.1696090698242188e-05, 3.337860107421875e-05, 5.412101745605469e-05,
           8.511543273925781e-05, 0.00013685226440429688, 0.0002186298370361328, 0.0003561973571777344,
           0.0009264945983886719, 0.0015125274658203125, 0.0019617080688476562, 0.003294229507446289,
           0.00668644905090332, 0.010216474533081055, 0.01839900016784668, 0.01617717742919922, 0.024970293045043945,
           0.04316401481628418, 0.07805514335632324, 0.12095808982849121, 0.18024492263793945, 0.28303003311157227]
answers_fib = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711,
               28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040]
# Dynamic programming:
arr_dp_fib = [2.384185791015625e-06, 2.1457672119140625e-06, 9.5367431640625e-07, 4.76837158203125e-07,
              1.1920928955078125e-06, 7.152557373046875e-07, 4.76837158203125e-07, 9.5367431640625e-07,
              4.76837158203125e-07, 7.152557373046875e-07, 4.76837158203125e-07, 7.152557373046875e-07,
              4.76837158203125e-07, 7.152557373046875e-07, 7.152557373046875e-07, 4.76837158203125e-07,
              7.152557373046875e-07, 4.76837158203125e-07, 9.5367431640625e-07, 4.76837158203125e-07,
              1.1920928955078125e-06, 7.152557373046875e-07, 4.76837158203125e-07, 4.76837158203125e-07,
              4.76837158203125e-07, 7.152557373046875e-07, 4.76837158203125e-07, 4.76837158203125e-07,
              4.76837158203125e-07, 7.152557373046875e-07]
answers_dp_fib = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711,
                  28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040]

count = range(1, 31)
pylab.plot(count, arr_fib, color='black', linewidth=2, label='Naive implementation')
pylab.plot(count, arr_dp_fib, color='blue', linewidth=2, label='Dynamic programming')
pylab.legend(loc='upper left')
pylab.xlabel('Number')
pylab.ylabel('Time to generate number (in secs)')
pylab.ylim(-0.05, 0.3)
pylab.xlim(18, 30)
pylab.title("Comparison of algorithms' runtimes")
pylab.show()

Actions = [0, 0, 0, 0, 1, 2, 0, 1, 0, 1, 2, 1, 0, 0, 0, 1, 2, 1, 1, 0, 0, 1, 0, 0, 0, 0, 2, 0, 2, 1, 1, 1, 1, 0, 2, 0,
           1, 0, 1, 1, 1, 2, 1, 2, 1, 0, 0, 1, 2, 0, 2, 0, 0, 2, 1, 0, 1, 1, 0, 1, 2, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 0,
           0, 0, 1, 1, 0, 2, 0, 2, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 0, 0, 1, 0, 0, 2, 2, 1, 1, 1, 2, 0, 0, 0, 1, 0, 0,
           1, 0, 1, 0, 2, 0, 0, 1, 0, 1, 2, 1, 0, 2, 0, 0, 2, 2, 0, 1, 2, 0, 0, 0, 0, 0, 1, 2, 0, 0, 2, 2, 0, 2, 0, 0,
           1, 1, 1, 1, 2, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 0, 0, 1, 2, 2, 1, 2, 1, 0, 1, 2, 1, 2, 0, 1, 0, 1, 2, 0, 0, 0,
           1, 0, 2, 0, 0, 1, 0, 0, 0, 1, 0, 0, 2, 2, 0, 0, 1, 0, 1, 0, 0, 2, 2, 0, 2, 2, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1,
           1, 2, 1, 1, 2, 1, 0, 2, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 2, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0,
           0, 0, 1, 2, 1, 0, 2, 1, 1, 2, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 2, 0, 0, 0, 1, 2, 0, 0, 2, 2, 0, 0,
           1, 0, 0, 0, 0, 0, 1, 2, 1, 0, 1, 2, 0, 0, 0, 0, 1, 0, 0, 0, 1, 2, 1, 2, 2, 0, 2, 0, 1, 0, 2, 2, 1, 0, 2, 2,
           1, 1, 1, 2, 1, 1, 1, 2, 0, 2, 2, 0, 2, 1, 2, 2, 1, 1, 0, 2, 2, 2, 2, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1,
           0, 0, 0, 2, 1, 2, 0, 1, 1, 0, 0, 2, 0, 0, 1, 2, 1, 0, 2, 1, 0, 2, 2, 1, 2, 0, 0, 0, 2, 2, 2, 1, 1, 0, 2, 2,
           2, 1, 2, 1, 0, 2, 2, 2, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 2, 2, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 2, 2,
           0, 2, 1, 2, 0, 2, 0, 1, 0, 0, 2, 0, 0, 1, 0, 2, 0, 1, 1, 0, 2, 0, 0, 1, 1, 2, 1, 1, 1, 0, 0, 2, 0, 2, 1, 1,
           0, 2, 0, 2, 2, 1, 0, 2, 0, 0, 2, 1, 1, 0, 1, 0, 0, 0, 1]
Velocity = [19, 19, 23, 13, 19, 24, 13, 23, 22, 15, 22, 27, 13, 6, 19, 30, 32, 24, 13, 13, 24, 22, 11, 12, 27, 29, 17,
            10, 16, 30, 29, 19, 11, 16, 28, 22, 11, 21, 26, 14, 18, 28, 18, 15, 25, 19, 15, 26, 25, 13, 7, 12, 17, 24,
            30, 25, 16, 11, 6, 7, 22, 25, 33, 30, 20, 11, 4, 16, 27, 24, 9, 6, 15, 21, 28, 31, 21, 11, 6, 5, 23, 31, 31,
            18, 12, 4, 15, 25, 32, 32, 24, 15, 6, 5, 26, 32, 29, 16, 9, 15, 25, 26, 15, 11, 21, 28, 15, 14, 27, 21, 15,
            23, 17, 22, 18, 21, 18, 22, 17, 22, 16, 22, 20, 16, 26, 17, 10, 23, 28, 14, 18, 26, 17, 17, 24, 16, 23, 20,
            19, 21, 19, 20, 20, 20, 20, 20, 19, 19, 19, 17, 21, 18, 15, 26, 21, 10, 21, 26, 13, 18, 27, 23, 10, 17, 28,
            26, 16, 8, 11, 15, 27, 34, 28, 18, 8, 12, 21, 33, 29, 24, 18, 9, 3, 25, 32, 24, 18, 17, 6, 13, 22, 28, 32,
            25, 16, 8, 10, 21, 30, 29, 21, 16, 7, 6, 13, 18, 27, 27, 12, 18, 26, 15, 21, 25, 11, 14, 28, 18, 11, 20, 28,
            15, 17, 24, 14, 20, 29, 23, 13, 20, 26, 10, 15, 26, 34, 35, 32, 28, 21, 14, 12, 8, 10, 26, 32, 31, 24, 12,
            11, 4, 7, 24, 27, 32, 25, 14, 8, 13, 24, 30, 21, 10, 8, 11, 24, 30, 29, 16, 7, 5, 8, 24, 28, 32, 26, 23, 15,
            8, 8, 18, 29, 34, 25, 14, 12, 23, 33, 29, 20, 13, 11, 4, 11, 25, 32, 20, 11, 22, 30, 20, 10, 5, 6, 25, 32,
            26, 13, 6, 13, 27, 23, 35, 34, 28, 17, 8, 12, 23, 30, 32, 26, 21, 11, 7, 2, 21, 5, 25, 32, 33, 32, 33, 33,
            24, 18, 7, 4, 10, 29, 32, 17, 8, 4, 20, 27, 35, 28, 17, 6, 4, 11, 24, 33, 32, 27, 16, 6, 7, 19, 25, 31, 31,
            23, 17, 13, 18, 13, 4, 3, 21, 7, 8, 10, 9, 14, 21, 29, 24, 12, 15, 28, 24, 15, 14, 26, 33, 25, 11, 16, 27,
            26, 13, 12, 26, 30, 19, 12, 25, 20, 17, 24, 14, 21, 20, 18, 22, 16, 24, 14, 17, 25, 19, 14, 26, 19, 13, 24,
            24, 12, 21, 25, 13, 18, 26, 14, 21, 25, 14, 23, 21, 19, 22, 18, 21, 18, 19, 20, 13, 26, 22, 11, 11, 18, 30,
            29, 18, 12, 24, 31, 31, 23, 20, 21, 14, 6, 4, 21, 29, 32, 27, 16, 10, 19, 28, 21, 8, 17, 28, 18, 11, 24, 28,
            14, 11, 21, 32, 30, 22, 18, 12, 5, 10, 20, 28, 30, 21, 11]
Positions = [16, 11, 16, 14, 8, 18, 15, 10, 19, 15, 9, 17, 20, 10, 1, 7, 17, 26, 21, 9, 9, 24, 19, 6, 6, 19, 24, 14, 2,
             6, 22, 26, 18, 7, 12, 23, 14, 6, 18, 19, 8, 14, 21, 11, 11, 20, 10, 10, 22, 21, 9, 3, 2, 1, 13, 25, 27, 25,
             14, 5, 0, 2, 10, 23, 31, 26, 15, 2, 9, 22, 20, 9, 1, 1, 8, 22, 24, 20, 15, 5, 1, 6, 17, 26, 25, 20, 3, 3,
             9, 22, 28, 29, 11, 7, 2, 13, 22, 24, 15, 4, 7, 19, 23, 11, 3, 16, 21, 8, 10, 20, 12, 12, 17, 13, 15, 14,
             14, 14, 16, 13, 15, 11, 19, 13, 13, 21, 11, 7, 19, 19, 8, 14, 18, 9, 16, 14, 15, 14, 15, 13, 17, 12, 16,
             13, 16, 14, 15, 14, 14, 14, 12, 18, 11, 14, 23, 14, 7, 18, 17, 7, 14, 22, 15, 3, 8, 22, 26, 17, 6, 0, 3,
             14, 28, 26, 17, 1, 0, 10, 28, 26, 33, 24, 10, 1, 13, 25, 26, 32, 17, 2, 0, 5, 16, 24, 23, 14, 6, 4, 12, 22,
             30, 29, 18, 12, 3, 1, 9, 22, 19, 7, 15, 17, 9, 18, 19, 8, 14, 23, 12, 5, 16, 20, 8, 16, 15, 7, 15, 24, 17,
             10, 19, 16, 4, 2, 13, 15, 15, 27, 31, 30, 22, 13, 1, 2, 9, 19, 30, 24, 28, 9, 1, 1, 3, 13, 24, 23, 12, 7,
             4, 17, 25, 19, 8, 1, 1, 8, 22, 28, 22, 16, 2, 1, 3, 18, 30, 31, 28, 15, 6, 1, 6, 17, 25, 21, 8, 4, 12, 24,
             31, 27, 28, 14, 1, 2, 10, 22, 14, 7, 14, 25, 21, 11, 2, 4, 14, 28, 27, 23, 3, 2, 0, 12, 18, 25, 29, 15, 5,
             0, 6, 21, 31, 25, 22, 19, 11, 0, 3, 1, 8, 22, 25, 12, 23, 29, 31, 23, 9, 0, 4, 22, 28, 21, 18, 0, 3, 15,
             27, 29, 18, 12, 2, 1, 11, 21, 26, 28, 19, 7, 0, 2, 11, 19, 27, 26, 27, 35, 28, 19, 15, 0, 1, 27, 29, 8, 3,
             0, 9, 21, 16, 7, 8, 20, 20, 7, 4, 14, 22, 17, 4, 8, 22, 21, 8, 5, 17, 23, 12, 10, 19, 11, 14, 16, 11, 18,
             11, 16, 14, 13, 16, 10, 15, 19, 11, 12, 21, 10, 8, 20, 15, 8, 18, 18, 9, 16, 14, 9, 17, 15, 12, 18, 11, 15,
             16, 12, 18, 11, 18, 11, 11, 23, 17, 4, 2, 6, 20, 25, 9, 5, 12, 23, 29, 33, 33, 24, 14, 9, 0, 4, 18, 21, 23,
             10, 2, 14, 23, 16, 6, 14, 22, 11, 6, 18, 21, 6, 2, 10, 23, 30, 35, 27, 18, 5, 0, 9, 19, 26, 25]

fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
ax.plot(Positions, Velocity, c='r', marker='o')
ax.set_xlabel('Position')
ax.set_ylabel('Velocity')
#ax.set_zlabel('Action')
plt.show()
